# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# 'body':
  # 'ctrl-shift-]': 'pane:show-next-pane'
  #

'body':
  # Multi-pane:
  "cmd-alt-right": "window:focus-previous-pane",
  "cmd-alt-left": "window:focus-next-pane",
  'ctrl-cmd-alt-right': 'pane:split-right',
  'ctrl-cmd-alt-left': 'pane:split-left',
  'ctrl-cmd-alt-up': 'pane:split-up',
  'ctrl-cmd-alt-down': 'pane:split-down'

'atom-text-editor:not([mini]),
 atom-text-editor:not(.autocomplete-active)': {
  'cmd-escape': 'autocomplete-plus:activate'
}

'.platform-darwin atom-workspace':
  'cmd-shift-f': 'project-find:show-in-current-directory'


# Markdown Writer
".platform-darwin atom-text-editor[data-grammar~='gfm'],
.platform-darwin atom-text-editor[data-grammar~='md']":
  "shift-cmd-K": "markdown-writer:insert-link"
  "shift-cmd-I": "markdown-writer:insert-image"
  "cmd-i":       "markdown-writer:toggle-italic-text"
  "cmd-b":       "markdown-writer:toggle-bold-text"

# End line
'atom-text-editor[data-grammar~="css"]:not([mini]),
atom-text-editor[data-grammar~="html"]:not([mini])':
  'ctrl-;': 'js-extras:end-line'
  'ctrl-,': 'js-extras:end-line-comma'
  'ctrl-enter': 'js-extras:end-new-line'
  'cmd-shift-enter': 'js-extras:end-new-line'
  'ctrl-b': 'js-extras:wrap-block'
'atom-text-editor[data-grammar~="js"]:not([mini]':
  'cmd-shift-enter': 'js-extras:end-new-line'

'atom-workspace atom-text-editor:not([mini])':
  'cmd-alt-[': 'auto-indent:apply'

'.platform-darwin atom-text-editor:not([mini])':
  # Show grammar/syntax selector
  'ctrl-esc': 'grammar-selector:show'

  # Sub-word boundary:
  'ctrl-left': 'editor:move-to-previous-subword-boundary'
  'ctrl-right': 'editor:move-to-next-subword-boundary'
  'ctrl-shift-left': 'editor:select-to-previous-subword-boundary'
  'ctrl-shift-right': 'editor:select-to-next-subword-boundary'


# Make tab completion work with anything that extends html
'atom-text-editor[data-grammar~="html"]:not([mini]':
  'tab': 'emmet:expand-abbreviation-with-tab'
  'ctrl-e': 'emmet:expand-abbreviation-with-tab'
