{".text.html.twig":{"craft.assets":{"prefix":"assets","body":"{% for image in craft.assets.\n\t.sourceId('${1:1}')\n  .kind('${2:image}')\n  .limit(${3:10})\n}) %}\n    <img src=\"{{ image.url${4:('${5:thumb}')} }}\" width=\"${6:200}\" height=\"${7:200}\" alt=\"{{ image.title }}\">\n{% endfor %}\n$0"},"block (block)":{"prefix":"blockb","body":"{% block ${1:name} %}\n    $0\n{% endblock %}"},"block":{"prefix":"block","body":"{% block ${1:name} %}$0{% endblock %}"},"ciel":{"prefix":"ciel","body":"ceil($1)$0"},"craft.assets w/ params":{"prefix":"assetsp","body":"{% set assets = craft.assets.find({\n  sourceId:  \t'${1:1}',\n  kind:      \t'${2:image}',\n  limit: \t\t\t${3:10}\n}) %}\n\n{% for image in assets %}\n    <img src=\"{{ image.url${4:('${5:thumb}')} }}\" width=\"${6:200}\" height=\"${7:200}\" alt=\"{{ image.title }}\">\n{% endfor %}\n$0"},"craft.categories w/ params":{"prefix":"categoriesp","body":"{% set categories = craft.categories.find({\n  group:    '${1:categoryGroupHandle',\n  limit:      '${2:10}'\n}) %}\n\n<ul>\n    {% nav category in categories %}\n        <li>\n            <a href=\"{{ category.url }}\">{{ category.title }}</a>\n            {% ifchildren %}\n                <ul>\n                    {% children %}\n                </ul>\n            {% endifchildren %}\n        </li>\n    {% endnav %}\n</ul>"},"craft.categories":{"prefix":"categories","body":"<ul>\n    {% nav category in craft.categories\n\t\t\t .group('categoryGroupHandle',')\n\t\t\t .limit(10)\n\t\t\t %}\n        <li>\n            <a href=\"{{ category.url }}\">{{ category.title }}</a>\n            {% ifchildren %}\n                <ul>\n                    {% children %}\n                </ul>\n            {% endifchildren %}\n        </li>\n    {% endnav %}\n</ul>"},"info: craft.config":{"prefix":"info","body":"{# Access any settings in craft/config/general.php #}\n{% if craft.config.devMode %}{% endif %}\n\n{# Access settings in any config file #}\n{{ craft.config.get('someConfigSetting', 'someConfigFile') }}\n\n{# General Settings #}\n{{ craft.config.appId }}\n{{ craft.config.cacheDuration }}\n{{ craft.config.cacheMethod }}\n{{ craft.config.customAsciiCharMappings }} {# array #}\n{{ craft.config.defaultCookieDomain }}\n{{ craft.config.devMode }}\n{{ craft.config.environmentVariables }} {# array #}\n{{ craft.config.isSystemOn }}\n{{ craft.config.logDumpMethod }}\n{{ craft.config.overridePhpSessionLocation }}\n{{ craft.config.phpMaxMemoryLimit }}\n{{ craft.config.runTasksAutomatically }}\n{{ craft.config.searchIgnoreWords }} {# array #}\n{{ craft.config.siteName }} {# can be an array #}\n{{ craft.config.siteUrl }} {# can be an array #}\n{{ craft.config.timezone }}\n{{ craft.config.translationDebugOutput }}\n{{ craft.config.useCompressedJs }}\n{{ craft.config.useWriteFileLock }}\n{{ craft.config.useXSendFile }}\n\n{# Security Settings #}\n{{ craft.config.csrfTokenName }}\n{{ craft.config.defaultFilePermissions }}\n{{ craft.config.defaultFolderPermissions }}\n{{ craft.config.defaultTokenDuration }}\n{{ craft.config.enableCsrfProtection }}\n{{ craft.config.tokenParam }}\n{{ craft.config.useSecureCookies }}\n\n{# Updates Settings #}\n{{ craft.config.allowAutoUpdates }}\n{{ craft.config.backupDbOnUpdate }}\n{{ craft.config.restoreDbOnUpdateFailure }}\n\n{# URL Settings #}\n{{ craft.config.actionTrigger }}\n{{ craft.config.addTrailingSlashesToUrls }}\n{{ craft.config.allowUppercaseInSlug }}\n{{ craft.config.baseCpUrl }}\n{{ craft.config.cpTrigger }}\n{{ craft.config.limitAutoSlugsToAscii }}\n{{ craft.config.maxSlugIncrement }}\n{{ craft.config.omitScriptNameInUrls }}\n{{ craft.config.pageTrigger }}\n{{ craft.config.resourceTrigger }}\n{{ craft.config.slugWordSeparator }}\n{{ craft.config.usePathInfo }}\n\n{# Templating Settings #}\n{{ craft.config.cacheElementQueries }}\n{{ craft.config.defaultTemplateExtensions }} {# array #}\n{{ craft.config.errorTemplatePrefix }}\n{{ craft.config.indexTemplateFilenames }}\n{{ craft.config.privateTemplateTrigger }}\n\n{# Users Settings #}\n{{ craft.config.activateAccountFailurePath }}\n{{ craft.config.activateAccountSuccessPath }}\n{{ craft.config.autoLoginAfterAccountActivation }}\n{{ craft.config.blowfishHashCost }}\n{{ craft.config.cooldownDuration }}\n{{ craft.config.invalidLoginWindowDuration }}\n{{ craft.config.invalidUserTokenPath }}\n{{ craft.config.loginPath }}\n{{ craft.config.logoutPath }}\n{{ craft.config.maxInvalidLogins }}\n{{ craft.config.postCpLoginRedirect }}\n{{ craft.config.postLoginRedirect }}\n{{ craft.config.purgePendingUsersDuration }}\n{{ craft.config.rememberUsernameDuration }}\n{{ craft.config.rememberedUserSessionDuration }}\n{{ craft.config.requireMatchingUserAgentForSession }}\n{{ craft.config.requireUserAgentAndIpForSession }}\n{{ craft.config.setPasswordPath }}\n{{ craft.config.setPasswordSuccessPath }}\n{{ craft.config.testToEmailAddress }}\n{{ craft.config.useEmailAsUsername }}\n{{ craft.config.userSessionDuration }}\n{{ craft.config.verificationCodeDuration }}\n\n{# Assets Settings #}\n{{ craft.config.allowedFileExtensions }}\n{{ craft.config.defaultImageQuality }}\n{{ craft.config.extraAllowedFileExtensions }}\n{{ craft.config.filenameWordSeparator }}\n{{ craft.config.generateTransformsBeforePageLoad }}\n{{ craft.config.imageDriver }}\n{{ craft.config.maxCachedCloudImageSize }}\n{{ craft.config.maxUploadFileSize }}\n{{ craft.config.rotateImagesOnUploadByExifData }}\n{{ craft.config.generateTransformsBeforePageLoad }}\n\n$0\n\n"},"craft.entries w/ params":{"prefix":"entriesp","body":"{% set entries = craft.entries.find({\n  section:    '${1:sectionName}',\n  limit:      '${2:10}'\n}) %}\n\n{% for entry in entries %}\n  <a href=\"{{ entry.url }}\">{{ entry.title }}</a>\n{% endfor %}\n$0"},"craft.entries":{"prefix":"entries","body":"{% for entry in craft.entries\n\t.section('${1:sectionName}')\n\t.limit(${2:10})\n\t%}\n  <a href=\"{{ entry.url }}\">{{ entry.title }}</a>\n{% endfor %}\n$0"},"feed":{"prefix":"feed","body":"{% set feedUrl = \"${1:http://feeds.feedburner.com/blogandtonic}\" %}\n{% set limit = ${2:10} %}\n{% set items = craft.feeds.getFeedItems(feedUrl, limit) %}\n\n{% for item in items %}\n    <article>\n        <h3><a href=\"{{ item.permalink }}\">{{ item.title }}</a></h3>\n        <p class=\"author\">{{ item.authors[0].name }}</p>\n        <p class=\"date\">{{ item.date }}</p>\n\n        {{ item.summary }}\n    </article>\n{% endfor %}"},"info: craft.fields":{"prefix":"info","body":"{% set body = craft.fields.getFieldByHandle('body') %}\n{{ body.instructions }}"},"info: craft.globals":{"prefix":"info","body":"{% set globals = craft.globals.getAllSets() %}\n{% set globals = craft.globals.getEditableSets() %}\n{% set globals = craft.globals.getTotalSets() %}\n{% set globals = craft.globals.getTotalEditableSets() %}\n{% set globalSet = craft.globals.getSetById( id, locale ) %}\n{% set globalSet = craft.globals.getSetByHandle( handle, locale ) %}"},"info: craft.sections":{"prefix":"info","body":"{% set sections = craft.sections.getAllSections() %}\n{% set sections = craft.sections.getEditableSections() %}\n{% set total = craft.sections.getTotalSections() %}\n{% set total = craft.sections.getTotalEditableSections() %}\n{% set section = craft.sections.getSectionById( sectionId ) %}\n{% set section = craft.sections.getSectionByHandle( handle ) %}"},"info: craft.session":{"prefix":"info","body":"{% if craft.session.isLoggedIn %}{% endif %}\n\n{{ craft.session.getRememberedUsername }}\n{{ craft.session.getReturnUrl }}\n\n{{ craft.session.getFlash( key, defaultValue, delete ) }}\n{{ craft.session.getFlash( key, defaultValue, false ) }}\n{{ craft.session.getFlashes( delete ) }}\n{{ craft.session.getFlashes( false ) }}\n\n{% if craft.session.hasFlash() %}{% endif %}"},"craft.tags w/ params":{"prefix":"tagsp","body":"{% set tags = craft.tags.find({\n  set:    '${1:setName}'\n}) %}\n\n<ul>\n{% for tag in tags %}\n    <li>{{ tag }}</a></li>\n{% endfor %}\n</ul>\n$0"},"craft.tags":{"prefix":"tags","body":"<ul>\n{% for tag in craft.tags\n\t.set('${1:setName}')\n\t%}\n    <li>{{ tag }}</li>\n{% endfor %}\n</ul>\n$0"},"craft.users w/ params":{"prefix":"usersp","body":"{% set accounts = craft.users.find({\n  group:    '${1:groupName}'\n}) %}\n\n{% for account in accounts %}\n  {{ account.firstName }} {{ account.lastName }}\n{% endfor %}\n$0"},"craft.users":{"prefix":"users","body":"{% for account in craft.users\n\t.group('${1:groupName}')\n\t%}\n  {{ account.firstName }} {{ account.lastName }}\n{% endfor %}\n$0"},"dump":{"prefix":"dump","body":"<pre>\n  {{ dump($1) }}\n</pre>"},"else":{"prefix":"endif","body":"{% endif %}$0"},"endblock":{"prefix":"endblock","body":"{% endblock %}$0"},"endfilter":{"prefix":"endfilter","body":"{% endfilter %}$0"},"text.html.twig":{"prefix":"endfor","body":"{% endfor %}$0"},"endset":{"prefix":"endset","body":"{% endset %}$0"},"exit":{"prefix":"exit","body":"{% exit ${1:404} %}"},"extends":{"prefix":"extends","body":"{% extends '${1:template}' %}$0"},"filter (block)":{"prefix":"filterb","body":"{% filter ${1:name} %}\n    $0\n{% endfilter %}"},"filter":{"prefix":"filter","body":"{% filter ${1:name} %}$0{% endfilter %}"},"floor":{"prefix":"floor","body":"floor($1)$0"},"for ... else":{"prefix":"fore","body":"{% for ${1:item} in ${2:items} %}\n    $3\n{% else %}\n    $0\n{% endfor %}"},"for":{"prefix":"for","body":"{% for ${1:item} in ${2:items} %}\n    $0\n{% endfor %}"},"if":{"prefix":"if","body":"{% if ${1:condition} %}$0{% endif %}"},"if (block)":{"prefix":"ifb","body":"{% if ${1:condition} %}\n    $0\n{% endif %}"},"if ... else":{"prefix":"ife","body":"{% if ${1:condition} %}\n    $2\n{% else %}\n    $0\n{% endif %}"},"include w/ params":{"prefix":"incp","body":"{% include '${1:template}' with {\n\t${2:key}: ${3:'${4:value}'}\n}} %}\n$0"},"include":{"prefix":"inc","body":"{% include '${1:template}'${2: with ${3:vars} }%}$0"},"includeCssFile":{"prefix":"includecss","body":"{% includeCssFile \"${1:/resources/css/global.css}\" %}\n$0"},"includeCssHiRes":{"prefix":"includecss","body":"{% includehirescss %}\n\t${1:/* ${2:CSS here} */}\n\t$3\n{% endincludehirescss %}\n$0"},"includeJs":{"prefix":"includejs","body":"{% includejs %}\n\t${1:/* ${2:CSS here} */}\n\t$3\n{% endincludejs %}\n$0"},"includeJsFile":{"prefix":"includejs","body":"{% includeJsFile \"${1:/resources/js/global.js}\" %}\n$0"},"includeCss":{"prefix":"includecss","body":"{% includecss %}\n\t${1:/* ${2:CSS here} */}\n\t$3\n{% endincludecss %}\n$0"},"info: craft.assets":{"prefix":"info","body":"\n{% set assets = craft.assets.first() %}\n{% set assets = craft.assets.last() %}\n{% set assets = craft.assets.nth( n ) %}\n{% set assets = craft.assets.ids() %}\n{% set assets = craft.assets.total() %}\n\n{% set assets = craft.assets.find({\n\n  filename:   'fileName.jpg',\n  fixedOrder: true|false,\n  folderId:   id,\n  height:     200,\n  id:         id,\n  kind:       http://buildwithcraft.com/docs/templating/craft.assets#kind,\n  offset:     1,\n  size:       1000,\n  title:      'title',\n  source:     'assetSourceHandle'\n  sourceId:   id,\n  width:      200,\n\n  relatedTo:      element, sourceElement, targetElement, field, sourceLocale,\n  childOf:        See supported syntaxes below,\n  childField:     'fieldHandle' OR id,\n  parentOf:       See supported syntaxes below,\n  parentField:    'fieldHandle' OR id,\n\n  order:      'title,id,sourceId,folderId,filename,kind,width,height,size,\n              dateCreated asc,dateUpdated desc',\n              Also supports any textual field handles\n  limit:      100,\n  locale:     'en_us',\n  indexBy:    'id,title',\n\n  search:     'salty dog'           containing both \"salty\" and \"dog\"\n              '\"salty dog\"'         containing the exact phrase \"salty dog\"\n              'salty OR dog'        containing either \"salty\" or \"dog\" (or both)\n              'salty -dog'          containing \"salty\" but not \"dog\"\n              'body:salty'          containing \"salty\" in the \"body\" field\n              'body:salty'          body:dog containing both \"salty\" and \"dog\"\n                                    in the \"body\" field\n              'body:*'              containing anything within the \"body\" field\n              'salty locale:en_us'  containing \"salty\" in the locale \"en_us\"\n              'salt*'               containing a word that begins with \"salt\"\n              '*ty'                 containing a word that ends with \"ty\"\n              '*alt*'               containing a word that contains \"alt\",\n\n  Supported syntaxes for childOf, kind, parentOf\n              elementId\n              AssetFileModel, EntryModel, UserModel, or TagModel\n              [ arrayOfModels, arrayOfModels, arrayOfModels ]\n              [ 1, 2, 3 ]\n              craft.assets, craft.entries, craft.users, craft.tags\n}) %}\n\n{% for asset in assets %}\n\n  {{ asset.dateCreated }}\n  {{ asset.dateUpdated }}\n  {{ asset.extension }}\n  {{ asset.filename }}\n  {{ asset.folder }}\n  {{ asset.folderId }}\n  {{ asset.height }}\n  {{ asset.id }}\n  {{ asset.img }}\n  {{ asset.kind }}\n  {{ asset.locale }}\n  {{ asset.link }}\n  {{ asset.mimeType }}\n  {{ asset.size | filesize }}\n  {{ asset.source }}\n  {{ asset.sourceId }}\n  {{ asset.url }}\n  {{ asset.width }}\n\n  {{ asset.getHeight( transform ) }}\n  {{ asset.getWidth( transform ) }}\n  {{ asset.getUrl( transform ) }}\n  {{ asset.setTransform( transform ) }}\n\n  {% set prev = asset.getPrev( params ) %}\n  {% set next = asset.getNext( params ) %}\n  {% if prev %} <a href=\"/link-to-prev-asset\">{{ prev.title }}</a> {% endif %}\n  {% if next %} <a href=\"/link-to-next-asset\">{{ next.title }}</a> {% endif %}\n\n{% endfor %}}\n$0"},"info: craft.categories":{"prefix":"info","body":"\n{% set categories = craft.categories.first() %}\n{% set categories = craft.categories.last() %}\n{% set categories = craft.categories.nth( n ) %}\n{% set categories = craft.categories.ids() %}\n{% set categories = craft.categories.total() %}\n\n{% set categories = craft.categories.find({\n  id:             id OR 'not id' ,\n  fixedOrder:     true/false,\n  title:          'title',\n  slug:           'slug',\n  uri:            'uri',\n  group:          'categoryGroupHandle'\n  groupId:        id,\n  status:         'live,pending,expired,disabled,null',\n  offset:         10,\n  level:          2,\n  locale:         'en_us',\n\n  relatedTo:      element, sourceElement, targetElement, field, sourceLocale,\n  ancestorOf:     CategoryModel OR id,\n  ancestorDist:   2,\n  descendantOf:   CategoryModel OR id,\n  descendantDist: 2,\n  nextSiblingOf:  CategoryModel OR id,\n  prevSiblingOf:  CategoryModel OR id,\n\n  order:          'title,id,groupId,slug,uri,\n                   dateCreated asc,dateUpdated desc',\n  limit:          10,\n  indexBy:        'id,title',\n\n  search:         'salty dog'           containing both \"salty\" and \"dog\"\n                  '\"salty dog\"'         containing the exact phrase \"salty dog\"\n                  'salty OR dog'        containing either \"salty\" or \"dog\" (or both)\n                  'salty -dog'          containing \"salty\" but not \"dog\"\n                  'body:salty'          containing \"salty\" in the \"body\" field\n                  'body:salty'          body:dog containing both \"salty\" and \"dog\"\n                                        in the \"body\" field\n                  'body:*'              containing anything within the \"body\" field\n                  'salty locale:en_us'  containing \"salty\" in the locale \"en_us\"\n                  'salt*'               containing a word that begins with \"salt\"\n                  '*ty'                 containing a word that ends with \"ty\"\n                  '*alt*'               containing a word that contains \"alt\"\n\n}) %}\n\n{% for category in categories %}\n\n  {{ category.id }}\n  {{ category.level }}\n  {{ category.groupId }}\n  {{ category.group }}   {# array #}\n  {{ category.locale }}\n  {{ category.title }}\n  {{ category.slug }}\n  {{ category.uri }}\n  {{ category.url }}       {# full front-end URL #}\n  {{ category.link }}      {# full <a> tag #}\n  {{ category.cpEditUrl }}\n\n  {{ category.enabled }}\n  {{ category.status }}\n\n  {{ category.dateCreated }}\n  {{ category.dateUpdated }}\n\n  {{ category.getAncestors( distance ) }}\n  {{ category.getDescendants( distance) }}\n  {{ category.children }}\n  {{ category.parent }}\n  {{ category.hasDescendants }}\n  {{ category.nextSibling }}\n  {{ category.prevSibling }}\n  {{ category.isAncestorOf( entry ) }}\n  {{ category.isChildOf( entry ) }}\n  {{ category.isDescendantOf( entry ) }}\n  {{ category.isNextSiblingOf( entry ) }}\n  {{ category.isParentOf( entry ) }}\n  {{ category.isPrevSiblingOf( entry ) }}\n  {{ category.isSiblingOf( entry ) }}\n\n  {% set prev = category.getPrev( params ) %}\n  {% set next = category.getNext( params ) %}\n  {% if prev %} <a href=\"{{ prev.url }}\">{{ prev.title }}</a> {% endif %}\n  {% if next %} <a href=\"{{ next.url }}\">{{ next.title }}</a> {% endif %}\n\n{% endfor %}}\n$0"},"info: craft.entries":{"prefix":"info","body":"\n{% set entries = craft.entries.first() %}\n{% set entries = craft.entries.last() %}\n{% set entries = craft.entries.nth( n ) %}\n{% set entries = craft.entries.ids() %}\n{% set entries = craft.entries.total() %}\n\n{% set entries = craft.entries.find({\n  id:             id OR 'not id' ,\n  fixedOrder:     true/false,\n  slug:           'slug',\n  uri:            'uri',\n  sectionId:      id,\n  section:        'sectionHandle', [arrayOfSectionHandles], SectionModel\n  authorId:       id,\n  authorGroupId:  id,\n  authorGroup:    id,\n  postDate:       'YYYY,YYYY-MM,YYYY-MM-DD,YYYY-MM-DD HH:MM,YYYY-MM-DD HH:MM:SS',\n  after:          'YYYY,YYYY-MM,YYYY-MM-DD,YYYY-MM-DD HH:MM,YYYY-MM-DD HH:MM:SS',\n  before:         'Unix timestamp,DateTime variable',\n  status:         'live,pending,expired,disabled,null',\n  type:           'entryTypeHandle',\n  archived:       true OR false,\n  offset:         10,\n  level:          2,\n  locale:         'en_us',\n  localeEnabled:  true/false,\n\n  relatedTo:      element, sourceElement, targetElement, field, sourceLocale,\n  ancestorOf:     EntryModel OR id,\n  ancestorDist:   2,\n  descendantOf:   EntryModel OR id,\n  descendantDist: 2,\n  nextSiblingOf:  EntryModel OR id,\n  prevSiblingOf:  EntryModel OR id,\n\n  order:          'title,id,authorId,sectionId,slug,uri,postDate,expiryDate',\n                  'dateCreated asc', 'dateUpdated desc'\n  limit:          10,\n  indexBy:        'id,title',\n\n  search:         'salty dog'           containing both \"salty\" and \"dog\"\n                  '\"salty dog\"'         containing the exact phrase \"salty dog\"\n                  'salty OR dog'        containing either \"salty\" or \"dog\" (or both)\n                  'salty -dog'          containing \"salty\" but not \"dog\"\n                  'body:salty'          containing \"salty\" in the \"body\" field\n                  'body:salty'          body:dog containing both \"salty\" and \"dog\"\n                                        in the \"body\" field\n                  'body:*'              containing anything within the \"body\" field\n                  'salty locale:en_us'  containing \"salty\" in the locale \"en_us\"\n                  'salt*'               containing a word that begins with \"salt\"\n                  '*ty'                 containing a word that ends with \"ty\"\n                  '*alt*'               containing a word that contains \"alt\"\n\n  Supported syntaxes for childOf, kind, parentOf\n                  elementId\n                  AssetFileModel, EntryModel, UserModel, or TagModel\n                  [ arrayOfModels, arrayOfModels, arrayOfModels ]\n                  [ 1, 2, 3 ]\n                  craft.assets, craft.entries, craft.users, craft.tags\n\n}) %}\n\n{% for entry in entries %}\n\n  {{ entry.id }}\n  {{ entry.level }}\n  {{ entry.sectionId }}\n  {{ entry.section }}   {# array #}\n  {{ entry.authorId }}\n  {{ entry.author }}    {# array #}\n  {{ entry.locale }}\n  {{ entry.type }}\n  {{ entry.title }}\n  {{ entry.slug }}\n  {{ entry.uri }}\n  {{ entry.url }}       {# full front-end URL #}\n  {{ entry.link }}      {# full <a> tag #}\n  {{ entry.cpEditUrl }}\n\n  {{ entry.enabled }}\n  {{ entry.status }}\n\n  {{ entry.postDate }}\n  {{ entry.expiryDate }}\n  {{ entry.dateCreated }}\n  {{ entry.dateUpdated }}\n\n  {{ entry.getAncestors( distance ) }}\n  {{ entry.getDescendants( distance) }}\n  {{ entry.children }}\n\t{{ entry.parent }}\n  {{ entry.hasDescendants }}\n  {{ entry.nextSibling }}\n  {{ entry.prevSibling }}\n  {{ entry.isAncestorOf( entry ) }}\n  {{ entry.isChildOf( entry ) }}\n  {{ entry.isDescendantOf( entry ) }}\n  {{ entry.isNextSiblingOf( entry ) }}\n  {{ entry.isParentOf( entry ) }}\n  {{ entry.isPrevSiblingOf( entry ) }}\n  {{ entry.isSiblingOf( entry ) }}\n\n  {% set prev = entry.getPrev( params ) %}\n  {% set next = entry.getNext( params ) %}\n  {% if prev %} <a href=\"{{ prev.url }}\">{{ prev.title }}</a> {% endif %}\n  {% if next %} <a href=\"{{ next.url }}\">{{ next.title }}</a> {% endif %}\n\n{% endfor %}}\n$0"},"info: craft.feeds":{"prefix":"info","body":"{# Required #}\n{% set feedUrl  = \"http://feeds.feedburner.com/blogandtonic\" %}\n\n{# Option #}\n{% set limit    = 10 %} {# How many items to return. Default: All #}\n{% set skip     = 0 %}  {# How many items to skip.   Default: Zero #}\n\n{% set items = craft.feeds.getFeedItems( url, limit, offset, cacheDuration ) %}\n\n{% for item in items %}\n\n  {{ title }}\n  {{ summary }}\n  {{ content }}\n\n  {{ date }}\n  {{ dateUpdated }}\n  {{ permalink }}\n\n  {{ authors }}               {# array #}\n  {{ authors[0].name }}\n  {{ authors[0].url }}\n  {{ authors[0].email }}\n\n  {{ contributors }}          {# array #}\n  {{ contributors[0].name }}\n  {{ contributors[0].url }}\n  {{ contributors[0].email }}\n\n  {{ categories }}            {# array #}\n  {{ categories[0].term }}\n  {{ categories[0].scheme }}\n  {{ categories[0].label }}\n\n{% endfor %}\n$0"},"info: craft.request":{"prefix":"info","body":"{# Properties #}\n{{ craft.request.isAjax }}\n{{ craft.request.isLivePreview }}\n{{ craft.request.isSecure }}\n\n{{ craft.request.path }}\n{{ craft.request.url }}\n{{ craft.request.urlReferrer }}\n{{ craft.request.pageNum }}\n\n{{ craft.request.queryString }}\n{{ craft.request.queryStringWithoutPath }}\n{{ craft.request.segments }}        {# array #}\n\n{{ craft.request.firstSegment }}\n{{ craft.request.lastSegment }}\n\n{{ craft.request.serverName }}\n\n{# Methods #}\n{{ craft.request.isMobileBrowser() }}\n\n{{ craft.request.getSegment( n ) }}\n{{ craft.request.getCookie( name ) }}\n{{ craft.request.getParam( name ) }}  {# Returns a parameter from either the query string or POST data. #}\n{{ craft.request.getQuery( name ) }}  {# Returns a parameter from the query string. #}\n{{ craft.request.getPost( name ) }}   {# Returns a parameter from the POST data. #}\n\n$0"},"info: craft.tags":{"prefix":"info","body":"\n{% set tags = craft.tags.first() %}\n{% set tags = craft.tags.last() %}\n{% set tags = craft.tags.nth( n ) %}\n{% set tags = craft.tags.ids() %}\n{% set tags = craft.tags.total() %}\n\n{% set tags = craft.tags.find({\n  id:             id OR 'not id' ,\n  fixedOrder:     true|false,\n  title:          'title',\n  group:          'tagGroupHandle',\n  groupId:        id,\n  offset:         2,\n\n  relatedTo:  element, sourceElement, targetElement, field, sourceLocale,\n\n  order:          'title,id,groupId,dateCreated asc,dateUpdated desc',\n  limit:          10,\n  locale:         'en_us',\n  indexBy:        'id,title',\n\n  search:         'salty dog'           containing both \"salty\" and \"dog\"\n                  '\"salty dog\"'         containing the exact phrase \"salty dog\"\n                  'salty OR dog'        containing either \"salty\" or \"dog\" (or both)\n                  'salty -dog'          containing \"salty\" but not \"dog\"\n                  'body:salty'          containing \"salty\" in the \"body\" field\n                  'body:salty'          body:dog containing both \"salty\" and \"dog\"\n                                        in the \"body\" field\n                  'body:*'              containing anything within the \"body\" field\n                  'salty locale:en_us'  containing \"salty\" in the locale \"en_us\"\n                  'salt*'               containing a word that begins with \"salt\"\n                  '*ty'                 containing a word that ends with \"ty\"\n                  '*alt*'               containing a word that contains \"alt\"\n\n  Supported syntaxes for childOf, kind, parentOf\n                  elementId\n                  AssetFileModel, EntryModel, UserModel, or TagModel\n                  [ arrayOfModels, arrayOfModels, arrayOfModels ]\n                  [ 1, 2, 3 ]\n                  craft.assets, craft.entries, craft.users, craft.tags\n\n}) %}\n\n{% for tag in tags %}\n\n  {{ tag.id }}\n  {{ tag.title }}\n  {{ tag.group }}\n  {{ tag.groupId }}\n  {{ tag.locale }}\n\n  {% set prev = tag.getPrev( params ) %}\n  {% set next = tag.getNext( params ) %}\n  {% if prev %} <a href=\"/link-to-prev-tag\">{{ prev.name }}</a> {% endif %}\n  {% if next %} <a href=\"/link-to-next-tag\">{{ next.name }}</a> {% endif %}\n\n{% endfor %}}\n$0"},"info: craft.users":{"prefix":"info","body":"\n{% set users = craft.users.first() %}\n{% set users = craft.users.last() %}\n{% set users = craft.users.nth( n ) %}\n{% set users = craft.users.ids() %}\n{% set users = craft.users.total() %}\n\n{% set users = craft.users.find({\n  admin:        true OR false,\n  can:          'createEntries:5'\n  email:        'email',\n  firstName:    'firstName',\n  group:        'groupHandle',\n  groupId:      id,\n  id:           id OR 'not id',\n  fixedOrder:   true|false,\n  lastLoginDate: 'YYYY,YYYY-MM,YYYY-MM-DD,YYYY-MM-DD HH:MM,YYYY-MM-DD HH:MM:SS',\n  lastName:     'lastName',\n  offset:       1,\n  status:       'active,locked,suspended,pending,archived,null',\n  username:     'username,\n\n  relatedTo:  element, sourceElement, targetElement, field, sourceLocale,\n\n  order:      'username,firstName,lastName,email,preferredLocale,status,lastLoginDate,\n               dateCreated asc,dateUpdated desc',\n  limit:      number,\n  indexBy:    'id,username'\n\n  search:     'salty dog'           containing both \"salty\" and \"dog\"\n              '\"salty dog\"'         containing the exact phrase \"salty dog\"\n              'salty OR dog'        containing either \"salty\" or \"dog\" (or both)\n              'salty -dog'          containing \"salty\" but not \"dog\"\n              'body:salty'          containing \"salty\" in the \"body\" field\n              'body:salty'          body:dog containing both \"salty\" and \"dog\"\n                                    in the \"body\" field\n              'body:*'              containing anything within the \"body\" field\n              'salty locale:en_us'  containing \"salty\" in the locale \"en_us\"\n              'salt*'               containing a word that begins with \"salt\"\n              '*ty'                 containing a word that ends with \"ty\"\n              '*alt*'               containing a word that contains \"alt\",\n\n}) %}\n\n{% for user in users %}\n\n  {{ user.id }}\n  {{ user.username }}\n  {{ user.name }}\n  {{ user.firstName }}\n  {{ user.lastName }}\n  {{ user.fullName }}\n  {{ user.friendlyName }}    {# falls back to username #}\n  {{ user.email }}\n\n  {{ user.preferredLocale }}\n  {{ user.admin }}           {# true,false #}\n  {{ user.status }}          {# active, locked, suspended, pending, archived #}\n  {{ user.isCurrent }}       {# is currently logged in #}\n\n  {{ user.lastLoginDate }}\n  {{ user.dateCreated }}\n  {{ user.dateUpdated }}\n\n  {{ user.getChildren( fields ) }}\n  {{ user.getParents( fields ) }}\n\n  {{ user.getGroups() }}\n  {{ user.isInGroup( groupHandle OR groupId OR UserGroupModel ) }}\n  {{ user.getPhotoUrl( size ) }}\n  {{ user.isCurrent() }}\n  {{ user.can( 'permission' ) }}\n\n  {% set prev = user.getPrev( params ) %}\n  {% set next = user.getNext( params ) %}\n  {% if prev %} <a href=\"/link-to-prev-user\">{{ prev.username }}</a> {% endif %}\n  {% if next %} <a href=\"/link-to-next-user\">{{ next.username }}</a> {% endif %}\n\n{% endfor %}}\n$0"},"matrix":{"prefix":"matrix","body":"{% for block in ${1:entry.matrixFieldHandle} %}\n\n\t{% if block.type == '${2:blockHandle}' %}\n\t\t{{ block.${3:fieldHandle} }}\n\t{% endif %}\n\n\t{% if block.type == '${4:blockHandle}' %}\n\t\t{{ block.${5:fieldHandle} }}\n\t{% endif %}\n\n{% endfor %}\n$0"},"max":{"prefix":"max","body":"max(${1:$2, $3})$0"},"min":{"prefix":"min","body":"min(${1:$2, $3})$0"},"paginate simple":{"prefix":"paginate","body":"{% paginate craft.entries.section('blog').limit(10) as entries %}\n\n    {% for entry in entries %}\n        <article>\n            <h1>{{ entry.title }}</h1>\n            {{ entry.body }}\n        </article>\n    {% endfor %}\n\n    {% if paginate.prevUrl %}\n        <a href=\"{{ paginate.prevUrl }}\">Previous Page</a>\n    {% endif %}\n\n    {% if paginate.nextUrl %}\n        <a href=\"{{ paginate.nextUrl }}\">Next Page</a>\n    {% endif %}\n\n{% endpaginate %}\n$0"},"paginate advanced":{"prefix":"paginate","body":"{# PAGINATION\n\nFor this pagination to work properly, we need to be sure to set\nthe paginateBase variable in the template we are including the\npagination in.\n\n{% set paginateBase = \"/blog/p\" %}\n#}\n\n{% if paginate.totalPages > 1 %}\n<ul>\n    {% if paginate.currentPage != \"1\"  %}\n        <li><a href=\"{{ paginateBase ~ '1' }}\">First Page</a></li>\n    {% endif %}\n\n    {% if paginate.prevUrl %}\n        <li><a href=\"{{ paginate.prevUrl }}\">Previous Page</a></li>\n    {% endif %}\n\n    {% for pageNumber in 1..paginate.totalPages %}\n        <li {% if paginate.currentPage == pageNumber %}class=\"active-page\"{% endif %}>\n            <a href=\"{{ paginateBase ~ pageNumber }}\">{{ pageNumber }}</a>\n        </li>\n    {% endfor %}\n\n    {% if paginate.nextUrl %}\n        <li><a href=\"{{ paginate.nextUrl }}\">Next Page</a></li>\n    {% endif %}\n\n    {% if paginate.currentPage != paginate.total %}\n        <li><a href=\"{{ paginateBase ~ paginate.total }}\">Last Page</a></li>\n    {% endif %}\n</ul>\n{% endif %}\n$0"},"redirect":{"prefix":"redirect","body":"{% redirect '${1:template/path or http://straightupcraft.com}' %}\n$0"},"request getParam":{"prefix":"request","body":"craft.request.getParam(${1:'Query String or Post Variable Name'})\n$0"},"request getPost":{"prefix":"request","body":"craft.request.getPost(${1:'postVariableName'})\n$0"},"request getQuery":{"prefix":"request","body":"craft.request.getQuery(${1:'queryStringName'})\n$0"},"request getSegment":{"prefix":"request","body":"craft.request.getSegment(${1:2})\n$0"},"requirePermission":{"prefix":"requirepermission","body":"{% requirePermission \"${1:spendTheNight}\" %}\n$0"},"round":{"prefix":"round","body":"round($1)$0"},"set (block)":{"prefix":"setb","body":"{% set ${1:var} %}\n    $0\n{% endset %}"},"set":{"prefix":"set","body":"{% set ${1:var} = ${2:value} %}$0"},"shuffle":{"prefix":"shuffle","body":"shuffle($1)$0"},"switch":{"prefix":"switch","body":"{% switch ${1:variable} %}\n\n\t{% case \"${2:value1}\" %}\n\n\n\t{% case \"${3:value2}\" %}\n\n\n\t{% default %}\n\n\n{% endswitch %}\n$0"},"{% ... %}":{"prefix":"%%","body":"{% $1 %}$2"},"{# ... #}":{"prefix":"##","body":"{# $1 #}$2"},"{{ ... }}":{"prefix":"}}","body":"{{ $1 }}$2"},"info: globals":{"prefix":"info","body":"\nSITE\n{{ siteName }}\n{{ siteUrl }}\n{{ loginUrl }}\n{{ logoutUrl }}\n\nDATE\n{{ now.year }}\n{{ now.month }}\n{{ now.day }}\n{{ now|date(\"M d, Y\") }}\n{{ now|date_modify(\"+1 day\") }}\n\nUSERS\n{{ currentUser }}  {# null if no user is logged in #}\n{{ currentUser.id }}\n{{ currentUser.username }}\n{{ currentUser.firstName }}\n{{ currentUser.lastName }}\n{{ currentUser.friendlyName }}\n{{ currentUser.email }}\n{{ currentUser.preferredLocale }}\n{{ currentUser.admin }}\n{{ currentUser.status }}  {# active, locked, suspended, pending, archived #}\n{{ currentUser.lastLoginDate }}\n{{ currentUser.dateCreated }}\n{{ currentUser.dateUpdated }}\n\n{{ currentUser.getChildren() }}\n{{ currentUser.getParents() }}\n\n{% set params = { group: 'authors', order: 'firstName, lastName' } %}\n{{ currentUser.getNext( params ) }}\n{{ currentUser.getPrev( params ) }}\n\nGLOBALS\n{{ globalSetName.fieldName }}\n\nTAGS\n{{ craft.assets }}\n{{ craft.categories }}\n{{ craft.entries }}\n{{ craft.tags }}\n{{ craft.user }}\n\n{{ craft.config }}\n{{ craft.feeds }}\n{{ craft.fields }}\n{{ craft.globals }}\n{{ craft.request }}\n{{ craft.sections }}\n{{ craft.session }}\n\n$0"},"csrf":{"prefix":"csrf","body":"{{ getCsrfInput() }}\n$0"},"url w/ arguments":{"prefix":"urla","body":"url('${1:path}', ${2:{foo:'1', bar:'2'\\}}, ${3:'http'}, ${4:false})$0"},"url":{"prefix":"url","body":"url('${1:path}')$0"}},".test.html.twig":{"requireLogin":{"prefix":"requirelogin","body":"{% requireLogin %}\n$0"}},".source.php":{"dump and die":{"prefix":"dd","body":"Craft::dd($1);"}}}