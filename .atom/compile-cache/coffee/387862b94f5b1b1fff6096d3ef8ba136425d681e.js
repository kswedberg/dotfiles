(function() {
  describe("Ionic autocompletions", function() {
    var editor, getCompletions, provider, _ref;
    _ref = [], editor = _ref[0], provider = _ref[1];
    getCompletions = function() {
      var cursor, end, prefix, request, start;
      cursor = editor.getLastCursor();
      start = cursor.getBeginningOfCurrentWordBufferPosition();
      end = cursor.getBufferPosition();
      prefix = editor.getTextInRange([start, end]);
      request = {
        editor: editor,
        bufferPosition: end,
        scopeDescriptor: cursor.getScopeDescriptor(),
        prefix: prefix
      };
      return provider.getSuggestions(request);
    };
    beforeEach(function() {
      waitsForPromise(function() {
        return atom.packages.activatePackage('autocomplete-ionic');
      });
      waitsForPromise(function() {
        return atom.packages.activatePackage('language-html');
      });
      runs(function() {
        return provider = atom.packages.getActivePackage('autocomplete-ionic').mainModule.getProvider();
      });
      waitsFor(function() {
        return Object.keys(provider.completions).length > 0;
      });
      waitsForPromise(function() {
        return atom.workspace.open('test.html');
      });
      return runs(function() {
        return editor = atom.workspace.getActiveTextEditor();
      });
    });
    it("returns no completions when not at the start of a tag", function() {
      editor.setText('');
      expect(getCompletions().length).toBe(0);
      editor.setText('d');
      editor.setCursorBufferPosition([0, 0]);
      expect(getCompletions().length).toBe(0);
      editor.setCursorBufferPosition([0, 1]);
      return expect(getCompletions().length).toBe(0);
    });
    it("returns no completions in style tags", function() {
      editor.setText("<style>\n<\n</style>");
      editor.setCursorBufferPosition([1, 1]);
      return expect(getCompletions().length).toBe(0);
    });
    it("returns no completions in script tags", function() {
      editor.setText("<script>\n<\n</script>");
      editor.setCursorBufferPosition([1, 1]);
      return expect(getCompletions().length).toBe(0);
    });
    it("autcompletes tag names without a prefix", function() {
      var completion, completions, _i, _len, _results;
      editor.setText('<');
      editor.setCursorBufferPosition([0, 1]);
      completions = getCompletions();
      expect(completions.length).toBe(112);
      expect(completions[0].descriptionMoreURL.endsWith('/HTML/Element/a')).toBe(true);
      _results = [];
      for (_i = 0, _len = completions.length; _i < _len; _i++) {
        completion = completions[_i];
        expect(completion.text.length).toBeGreaterThan(0);
        expect(completion.description.length).toBeGreaterThan(0);
        _results.push(expect(completion.type).toBe('tag'));
      }
      return _results;
    });
    it("autocompletes tag names with a prefix", function() {
      var completions;
      editor.setText('<d');
      editor.setCursorBufferPosition([0, 2]);
      completions = getCompletions();
      expect(completions.length).toBe(9);
      expect(completions[0].text).toBe('datalist');
      expect(completions[0].type).toBe('tag');
      expect(completions[0].descriptionMoreURL.endsWith('/HTML/Element/datalist')).toBe(true);
      expect(completions[1].text).toBe('dd');
      expect(completions[2].text).toBe('del');
      expect(completions[3].text).toBe('details');
      expect(completions[4].text).toBe('dfn');
      expect(completions[5].text).toBe('dialog');
      expect(completions[6].text).toBe('div');
      expect(completions[7].text).toBe('dl');
      expect(completions[8].text).toBe('dt');
      editor.setText('<D');
      editor.setCursorBufferPosition([0, 2]);
      completions = getCompletions();
      expect(completions.length).toBe(9);
      expect(completions[0].text).toBe('datalist');
      expect(completions[0].type).toBe('tag');
      expect(completions[1].text).toBe('dd');
      expect(completions[2].text).toBe('del');
      expect(completions[3].text).toBe('details');
      expect(completions[4].text).toBe('dfn');
      expect(completions[5].text).toBe('dialog');
      expect(completions[6].text).toBe('div');
      expect(completions[7].text).toBe('dl');
      return expect(completions[8].text).toBe('dt');
    });
    it("autocompletes attribute names without a prefix", function() {
      var completion, completions, _i, _j, _len, _len1, _results;
      editor.setText('<div ');
      editor.setCursorBufferPosition([0, 5]);
      completions = getCompletions();
      expect(completions.length).toBe(69);
      expect(completions[0].descriptionMoreURL.endsWith('/HTML/Global_attributes/accesskey')).toBe(true);
      for (_i = 0, _len = completions.length; _i < _len; _i++) {
        completion = completions[_i];
        expect(completion.snippet.length).toBeGreaterThan(0);
        expect(completion.displayText.length).toBeGreaterThan(0);
        expect(completion.description.length).toBeGreaterThan(0);
        expect(completion.type).toBe('attribute');
      }
      editor.setText('<marquee ');
      editor.setCursorBufferPosition([0, 9]);
      completions = getCompletions();
      expect(completions.length).toBe(81);
      expect(completions[0].rightLabel).toBe('<marquee>');
      expect(completions[0].descriptionMoreURL.endsWith('/HTML/Element/marquee#attr-align')).toBe(true);
      _results = [];
      for (_j = 0, _len1 = completions.length; _j < _len1; _j++) {
        completion = completions[_j];
        expect(completion.snippet.length).toBeGreaterThan(0);
        expect(completion.displayText.length).toBeGreaterThan(0);
        expect(completion.description.length).toBeGreaterThan(0);
        _results.push(expect(completion.type).toBe('attribute'));
      }
      return _results;
    });
    it("autocompletes attribute names with a prefix", function() {
      var completions;
      editor.setText('<div c');
      editor.setCursorBufferPosition([0, 6]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].snippet).toBe('class="$1"$0');
      expect(completions[0].displayText).toBe('class');
      expect(completions[0].type).toBe('attribute');
      expect(completions[1].displayText).toBe('contenteditable');
      expect(completions[2].displayText).toBe('contextmenu');
      editor.setText('<div C');
      editor.setCursorBufferPosition([0, 6]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].displayText).toBe('class');
      expect(completions[1].displayText).toBe('contenteditable');
      expect(completions[2].displayText).toBe('contextmenu');
      editor.setText('<div c>');
      editor.setCursorBufferPosition([0, 6]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].displayText).toBe('class');
      expect(completions[1].displayText).toBe('contenteditable');
      expect(completions[2].displayText).toBe('contextmenu');
      editor.setText('<div c></div>');
      editor.setCursorBufferPosition([0, 6]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].displayText).toBe('class');
      expect(completions[1].displayText).toBe('contenteditable');
      expect(completions[2].displayText).toBe('contextmenu');
      editor.setText('<marquee di');
      editor.setCursorBufferPosition([0, 12]);
      completions = getCompletions();
      expect(completions[0].displayText).toBe('direction');
      expect(completions[1].displayText).toBe('dir');
      editor.setText('<marquee dI');
      editor.setCursorBufferPosition([0, 12]);
      completions = getCompletions();
      expect(completions[0].displayText).toBe('direction');
      return expect(completions[1].displayText).toBe('dir');
    });
    it("autocompletes attribute values without a prefix", function() {
      var completions;
      editor.setText('<marquee behavior=""');
      editor.setCursorBufferPosition([0, 19]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      console.log(completions[0].descriptionMoreURL);
      expect(completions[0].text).toBe('scroll');
      expect(completions[0].type).toBe('value');
      expect(completions[0].description.length).toBeGreaterThan(0);
      expect(completions[0].descriptionMoreURL.endsWith('/HTML/Element/marquee#attr-behavior')).toBe(true);
      expect(completions[1].text).toBe('slide');
      expect(completions[2].text).toBe('alternate');
      editor.setText('<marquee behavior="');
      editor.setCursorBufferPosition([0, 19]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].text).toBe('scroll');
      expect(completions[1].text).toBe('slide');
      expect(completions[2].text).toBe('alternate');
      editor.setText('<marquee behavior=\'');
      editor.setCursorBufferPosition([0, 19]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].text).toBe('scroll');
      expect(completions[1].text).toBe('slide');
      expect(completions[2].text).toBe('alternate');
      editor.setText('<marquee behavior=\'\'');
      editor.setCursorBufferPosition([0, 19]);
      completions = getCompletions();
      expect(completions.length).toBe(3);
      expect(completions[0].text).toBe('scroll');
      expect(completions[1].text).toBe('slide');
      return expect(completions[2].text).toBe('alternate');
    });
    it("autocompletes attribute values with a prefix", function() {
      var completions;
      editor.setText('<html behavior="" lang="e"');
      editor.setCursorBufferPosition([0, 25]);
      completions = getCompletions();
      expect(completions.length).toBe(6);
      expect(completions[0].text).toBe('eu');
      expect(completions[0].type).toBe('value');
      expect(completions[1].text).toBe('en');
      expect(completions[2].text).toBe('eo');
      expect(completions[3].text).toBe('et');
      expect(completions[4].text).toBe('el');
      expect(completions[5].text).toBe('es');
      editor.setText('<html behavior="" lang="E"');
      editor.setCursorBufferPosition([0, 25]);
      completions = getCompletions();
      expect(completions.length).toBe(6);
      expect(completions[0].text).toBe('eu');
      expect(completions[1].text).toBe('en');
      expect(completions[2].text).toBe('eo');
      expect(completions[3].text).toBe('et');
      expect(completions[4].text).toBe('el');
      expect(completions[5].text).toBe('es');
      editor.setText('<html behavior="" lang=\'e\'');
      editor.setCursorBufferPosition([0, 25]);
      completions = getCompletions();
      expect(completions.length).toBe(6);
      expect(completions[0].text).toBe('eu');
      expect(completions[1].text).toBe('en');
      expect(completions[2].text).toBe('eo');
      expect(completions[3].text).toBe('et');
      expect(completions[4].text).toBe('el');
      return expect(completions[5].text).toBe('es');
    });
    return it("triggers autocomplete when an attibute has been inserted", function() {
      var args, suggestion;
      spyOn(atom.commands, 'dispatch');
      suggestion = {
        type: 'attribute',
        text: 'whatever'
      };
      provider.onDidInsertSuggestion({
        editor: editor,
        suggestion: suggestion
      });
      advanceClock(1);
      expect(atom.commands.dispatch).toHaveBeenCalled();
      args = atom.commands.dispatch.mostRecentCall.args;
      expect(args[0].tagName.toLowerCase()).toBe('atom-text-editor');
      return expect(args[1]).toBe('autocomplete-plus:activate');
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2tzd2VkYmVyZy8uYXRvbS9wYWNrYWdlcy9hdXRvY29tcGxldGUtanF1ZXJ5LW1vYmlsZS9zcGVjL3Byb3ZpZGVyLXNwZWMuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIkFBQUE7QUFBQSxFQUFBLFFBQUEsQ0FBUyx1QkFBVCxFQUFrQyxTQUFBLEdBQUE7QUFDaEMsUUFBQSxzQ0FBQTtBQUFBLElBQUEsT0FBcUIsRUFBckIsRUFBQyxnQkFBRCxFQUFTLGtCQUFULENBQUE7QUFBQSxJQUVBLGNBQUEsR0FBaUIsU0FBQSxHQUFBO0FBQ2YsVUFBQSxtQ0FBQTtBQUFBLE1BQUEsTUFBQSxHQUFTLE1BQU0sQ0FBQyxhQUFQLENBQUEsQ0FBVCxDQUFBO0FBQUEsTUFDQSxLQUFBLEdBQVEsTUFBTSxDQUFDLHVDQUFQLENBQUEsQ0FEUixDQUFBO0FBQUEsTUFFQSxHQUFBLEdBQU0sTUFBTSxDQUFDLGlCQUFQLENBQUEsQ0FGTixDQUFBO0FBQUEsTUFHQSxNQUFBLEdBQVMsTUFBTSxDQUFDLGNBQVAsQ0FBc0IsQ0FBQyxLQUFELEVBQVEsR0FBUixDQUF0QixDQUhULENBQUE7QUFBQSxNQUlBLE9BQUEsR0FDRTtBQUFBLFFBQUEsTUFBQSxFQUFRLE1BQVI7QUFBQSxRQUNBLGNBQUEsRUFBZ0IsR0FEaEI7QUFBQSxRQUVBLGVBQUEsRUFBaUIsTUFBTSxDQUFDLGtCQUFQLENBQUEsQ0FGakI7QUFBQSxRQUdBLE1BQUEsRUFBUSxNQUhSO09BTEYsQ0FBQTthQVNBLFFBQVEsQ0FBQyxjQUFULENBQXdCLE9BQXhCLEVBVmU7SUFBQSxDQUZqQixDQUFBO0FBQUEsSUFjQSxVQUFBLENBQVcsU0FBQSxHQUFBO0FBQ1QsTUFBQSxlQUFBLENBQWdCLFNBQUEsR0FBQTtlQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsZUFBZCxDQUE4QixvQkFBOUIsRUFBSDtN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QUFDLElBQTVCLENBQWlDLFVBQWpDLENBTkEsQ0FBQTtBQUFBLE1BT0EsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLEtBQWpDLENBUEEsQ0FBQTtBQUFBLE1BUUEsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFsQyxDQUEyQyx3QkFBM0MsQ0FBUCxDQUE0RSxDQUFDLElBQTdFLENBQWtGLElBQWxGLENBUkEsQ0FBQTtBQUFBLE1BU0EsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLElBQWpDLENBVEEsQ0FBQTtBQUFBLE1BVUEsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLEtBQWpDLENBVkEsQ0FBQTtBQUFBLE1BV0EsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLFNBQWpDLENBWEEsQ0FBQTtBQUFBLE1BWUEsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLEtBQWpDLENBWkEsQ0FBQTtBQUFBLE1BYUEsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLFFBQWpDLENBYkEsQ0FBQTtBQUFBLE1BY0EsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLEtBQWpDLENBZEEsQ0FBQTtBQUFBLE1BZUEsTUFBQSxDQUFPLFdBQVksQ0FBQSxDQUFBLENBQUUsQ0FBQyxJQUF0QixDQUEyQixDQUFDLElBQTVCLENBQWlDLElBQWpDLENBZkEsQ0FBQTtBQUFBLE1BZ0JBLE1BQUEsQ0FBTyxXQUFZLENB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

//# sourceURL=/Users/kswedberg/.atom/packages/autocomplete-jquery-mobile/spec/provider-spec.coffee
