(function() {
  var SelectStageHunkFiles, SelectStageHunks, fs, git, pathToRepoFile, repo, _ref;

  fs = require('fs-plus');

  git = require('../../lib/git');

  _ref = require('../fixtures'), repo = _ref.repo, pathToRepoFile = _ref.pathToRepoFile;

  SelectStageHunkFiles = require('../../lib/views/select-stage-hunk-file-view');

  SelectStageHunks = require('../../lib/views/select-stage-hunks-view');

  describe("SelectStageHunkFiles", function() {
    return it("gets the diff of the selected file", function() {
      var fileItem, view;
      spyOn(git, 'diff').andReturn(Promise.resolve(''));
      fileItem = {
        path: pathToRepoFile
      };
      view = new SelectStageHunkFiles(repo, [fileItem]);
      view.confirmSelection();
      return expect(git.diff).toHaveBeenCalledWith(repo, pathToRepoFile);
    });
  });

  describe("SelectStageHunks", function() {
    return it("stages the selected hunk", function() {
      var hunk, patch_path, view;
      spyOn(git, 'cmd').andReturn(Promise.resolve(''));
      spyOn(fs, 'unlink');
      spyOn(fs, 'writeFile').andCallFake(function() {
        return fs.writeFile.mostRecentCall.args[3]();
      });
      hunk = {
        match: function() {
          return [1, 'this is a diff', 'hunk'];
        }
      };
      view = new SelectStageHunks(repo, ["patch_path hunk1", hunk]);
      patch_path = repo.getWorkingDirectory() + '/GITPLUS_PATCH';
      view.confirmSelection();
      view.find('.btn-stage-button').click();
      return expect(git.cmd).toHaveBeenCalledWith(['apply', '--cached', '--', patch_path], {
        cwd: repo.getWorkingDirectory()
      });
    });
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICIiLAogICJzb3VyY2VSb290IjogIiIsCiAgInNvdXJjZXMiOiBbCiAgICAiL1VzZXJzL2tzd2VkYmVyZy8uYXRvbS9wYWNrYWdlcy9naXQtcGx1cy9zcGVjL3ZpZXdzL3NlbGVjdC1zdGFnZS1odW5rLWZpbGVzLXZpZXctc3BlYy5jb2ZmZWUiCiAgXSwKICAibmFtZXMiOiBbXSwKICAibWFwcGluZ3MiOiAiQUFBQTtBQUFBLE1BQUEsMkVBQUE7O0FBQUEsRUFBQSxFQUFBLEdBQUssT0FBQSxDQUFRLFNBQVIsQ0FBTCxDQUFBOztBQUFBLEVBQ0EsR0FBQSxHQUFNLE9BQUEsQ0FBUSxlQUFSLENBRE4sQ0FBQTs7QUFBQSxFQUVBLE9BQXlCLE9BQUEsQ0FBUSxhQUFSLENBQXpCLEVBQUMsWUFBQSxJQUFELEVBQU8sc0JBQUEsY0FGUCxDQUFBOztBQUFBLEVBR0Esb0JBQUEsR0FBdUIsT0FBQSxDQUFRLDZDQUFSLENBSHZCLENBQUE7O0FBQUEsRUFJQSxnQkFBQSxHQUFtQixPQUFBLENBQVEseUNBQVIsQ0FKbkIsQ0FBQTs7QUFBQSxFQU1BLFFBQUEsQ0FBUyxzQkFBVCxFQUFpQyxTQUFBLEdBQUE7V0FDL0IsRUFBQSxDQUFHLG9DQUFILEVBQXlDLFNBQUEsR0FBQTtBQUN2QyxVQUFBLGNBQUE7QUFBQSxNQUFBLEtBQUEsQ0FBTSxHQUFOLEVBQVcsTUFBWCxDQUFrQixDQUFDLFNBQW5CLENBQTZCLE9BQU8sQ0FBQyxPQUFSLENBQWdCLEVBQWhCLENBQTdCLENBQUEsQ0FBQTtBQUFBLE1BQ0EsUUFBQSxHQUNFO0FBQUEsUUFBQSxJQUFBLEVBQU0sY0FBTjtPQUZGLENBQUE7QUFBQSxNQUdBLElBQUEsR0FBVyxJQUFBLG9CQUFBLENBQXFCLElBQXJCLEVBQTJCLENBQUMsUUFBRCxDQUEzQixDQUhYLENBQUE7QUFBQSxNQUlBLElBQUksQ0FBQyxnQkFBTCxDQUFBLENBSkEsQ0FBQTthQUtBLE1BQUEsQ0FBTyxHQUFHLENBQUMsSUFBWCxDQUFnQixDQUFDLG9CQUFqQixDQUFzQyxJQUF0QyxFQUE0QyxjQUE1QyxFQU51QztJQUFBLENBQXpDLEVBRCtCO0VBQUEsQ0FBakMsQ0FOQSxDQUFBOztBQUFBLEVBZUEsUUFBQSxDQUFTLGtCQUFULEVBQTZCLFNBQUEsR0FBQTtXQUMzQixFQUFBLENBQUcsMEJBQUgsRUFBK0IsU0FBQSxHQUFBO0FBQzdCLFVBQUEsc0JBQUE7QUFBQSxNQUFBLEtBQUEsQ0FBTSxHQUFOLEVBQVcsS0FBWCxDQUFpQixDQUFDLFNBQWxCLENBQTRCLE9BQU8sQ0FBQyxPQUFSLENBQWdCLEVBQWhCLENBQTVCLENBQUEsQ0FBQTtBQUFBLE1BQ0EsS0FBQSxDQUFNLEVBQU4sRUFBVSxRQUFWLENBREEsQ0FBQTtBQUFBLE1BRUEsS0FBQSxDQUFNLEVBQU4sRUFBVSxXQUFWLENBQXNCLENBQUMsV0FBdkIsQ0FBbUMsU0FBQSxHQUFBO2VBQ2pDLEVBQUUsQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUssQ0FBQSxDQUFBLENBQWpDLENBQUEsRUFEaUM7TUFBQSxDQUFuQyxDQUZBLENBQUE7QUFBQSxNQUlBLElBQUEsR0FDRTtBQUFBLFFBQUEsS0FBQSxFQUFPLFNBQUEsR0FBQTtpQkFBRyxDQUFDLENBQUQsRUFBSSxnQkFBSixFQUFzQixNQUF0QixFQUFIO1FBQUEsQ0FBUDtPQUxGLENBQUE7QUFBQSxNQU1BLElBQUEsR0FBVyxJQUFBLGdCQUFBLENBQWlCLElBQWpCLEVBQXVCLENBQUMsa0JBQUQsRUFBcUIsSUFBckIsQ0FBdkIsQ0FOWCxDQUFBO0FBQUEsTUFPQSxVQUFBLEdBQWEsSUFBSSxDQUFDLG1CQUFMLENBQUEsQ0FBQSxHQUE2QixnQkFQMUMsQ0FBQTtBQUFBLE1BUUEsSUFBSSxDQUFDLGdCQUFMLENBQUEsQ0FSQSxDQUFBO0FBQUEsTUFTQSxJQUFJLENBQUMsSUFBTCxDQUFVLG1CQUFWLENBQThCLENBQUMsS0FBL0IsQ0FBQSxDQVRBLENBQUE7YUFVQSxNQUFBLENBQU8sR0FBRyxDQUFDLEdBQVgsQ0FBZSxDQUFDLG9CQUFoQixDQUFxQyxDQUFDLE9BQUQsRUFBVSxVQUFWLEVBQXNCLElBQXRCLEVBQTRCLFVBQTVCLENBQXJDLEVBQThFO0FBQUEsUUFBQSxHQUFBLEVBQUssSUFBSSxDQUFDLG1CQUFMLENBQUEsQ0FBTDtPQUE5RSxFQVg2QjtJQUFBLENBQS9CLEVBRDJCO0VBQUEsQ0FBN0IsQ0FmQSxDQUFBO0FBQUEiCn0=

//# sourceURL=/Users/kswedberg/.atom/packages/git-plus/spec/views/select-stage-hunk-files-view-spec.coffee
