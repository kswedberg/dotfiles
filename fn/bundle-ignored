#!/usr/bin/env zsh

PWD=$(pwd)
BUNDLE=$1

if [ ! $1 ]; then
  BUNDLE="bundle"
fi

[ -d "${BUNDLE}" ] && rm -rf $BUNDLE
mkdir -p $BUNDLE

# Create a .tar.gz archive, using `zopfli`, `pigz` or `gzip` for compression
function tar_gz() {
  local tmpFile="${@%/}.tar"
  tar -cvf "${tmpFile}" --exclude=".DS_Store" "${@}" || return 1

  size=$(
    stat -f"%z" "${tmpFile}" 2>/dev/null   # OS X `stat`
    stat -c"%s" "${tmpFile}" 2>/dev/null  # GNU `stat`
  )

  local cmd=""
  if ((size < 52428800)) && hash zopfli 2>/dev/null; then
    # the .tar file is smaller than 50 MB and Zopfli is available; use it
    cmd="zopfli"
  else
    if hash pigz 2>/dev/null; then
      cmd="pigz"
    else
      cmd="gzip"
    fi
  fi

  echo "Compressing .tar using \`${cmd}\`â€¦"
  "${cmd}" -v "${tmpFile}" || return 1
  [ -f "${tmpFile}" ] && rm "${tmpFile}"
  printf "${PWD}/${BUNDLE}.tar.gz created successfully."
}

function copy_files() {
  while read -r file; do
    dest=${BUNDLE}/${file}
    dir=$(dirname $dest)

    mkdir -p $dir
    cp -r ${file} ${dest}

  done <<<"${@}"

  tar_gz $BUNDLE

  [ -d "${BUNDLE}" ] && rm -rf $BUNDLE

  printf "FINISHED!"
}

IGNORED=$(git ls-files -o -x .DS_Store -x Library -x tmp)
copy_files ${IGNORED}

unset IGNORED
unset copy_files
