#!/bin/bash

SERVER="$1"
REMOTE_PORT="$2"
LOCAL_PORT="$3"

if [ -z $1 ]; then
cat <<TUNNELINSTRUCTIONS

tunnel db connector
  * Uses ssh tunnel to proxy to localhost:[9999]

EXAMPLES
  # connects to example.com on default remote :8080 and localhost:9999:
    tunnel user@example.com

  # connects to example.com on custom remote :8090 and localhost:9999:
    tunnel user@example.com 8090

  # connects to example.com on custom remote :8090 and localhost:9191:
    tunnel user@example.com 8090 9191

Type the user@server.com address for the server.
TUNNELINSTRUCTIONS

  read SERVER
fi

if [ -z $SERVER ]; then
  echo "No server specified. Bailing."
  return;
fi
if [ -z $2 ]; then
  echo 'Change the remote db port? Default is 8080'
  read REMOTE_PORT
  REMOTE_PORT=${REMOTE_PORT:-8080}
  echo 'Using' $REMOTE_PORT
fi

if [ -z $3 ]; then
  echo 'Change the localhost port? Default is 9999'
  read LOCAL_PORT
  LOCAL_PORT=${LOCAL_PORT:-9999}
  echo 'Using' $LOCAL_PORT
fi

CMD='ssh -f '${SERVER}' -L '${LOCAL_PORT}':127.0.0.1:'${REMOTE_PORT}' -N'
echo 'Connectingâ€¦'
echo $CMD
echo ''
echo "Access the database at http://localhost:"${LOCAL_PORT}
echo ''
echo 'To kill the process, type ` ps aux | grep ssh ` and find the pid of the tunnel process'
echo 'Then run kill [PID]'

eval $CMD
